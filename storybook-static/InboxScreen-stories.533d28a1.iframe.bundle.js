"use strict";(self.webpackChunkmy_storybook_nextjs=self.webpackChunkmy_storybook_nextjs||[]).push([[201,484,954],{"./stories/InboxScreen.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Error:()=>Error,__namedExportsOrder:()=>__namedExportsOrder,default:()=>InboxScreen_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),react_redux=__webpack_require__("./node_modules/react-redux/dist/react-redux.mjs"),redux_toolkit_modern=__webpack_require__("./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs");const fetchTasks=(0,redux_toolkit_modern.zD)("todos/fetchTodos",(async()=>{const response=await fetch("https://jsonplaceholder.typicode.com/todos?userId=1");return(await response.json()).map((task=>({id:`${task.id}`,title:task.title,state:task.completed?"TASK_ARCHIVED":"TASK_INBOX"})))})),TasksSlice=(0,redux_toolkit_modern.Z0)({name:"taskbox",initialState:{tasks:[],status:"idle",error:null},reducers:{updateTaskState:(state,action)=>{const{id,newTaskState}=action.payload,task=state.tasks.findIndex((task=>task.id===id));task>=0&&(state.tasks[task].state=newTaskState)}},extraReducers(builder){builder.addCase(fetchTasks.pending,(state=>{state.status="loading",state.error=null,state.tasks=[]})).addCase(fetchTasks.fulfilled,((state,action)=>{state.status="succeeded",state.error=null,state.tasks=action.payload})).addCase(fetchTasks.rejected,(state=>{state.status="failed",state.error="Something went wrong",state.tasks=[]}))}}),{updateTaskState}=TasksSlice.actions,storeAPI=(0,redux_toolkit_modern.U1)({reducer:{taskbox:TasksSlice.reducer}});var TaskListRedux=__webpack_require__("./stories/TaskListRedux.tsx");function InboxScreen(){const dispatch=(0,react_redux.wA)(),{error}=(0,react_redux.d4)((state=>state.taskbox));return(0,react.useEffect)((()=>{dispatch(fetchTasks())}),[]),error?(0,jsx_runtime.jsx)("div",{className:"page lists-show",children:(0,jsx_runtime.jsxs)("div",{className:"wrapper-message",children:[(0,jsx_runtime.jsx)("span",{className:"icon-face-sad"}),(0,jsx_runtime.jsx)("p",{className:"title-message",children:"Oh no!"}),(0,jsx_runtime.jsx)("p",{className:"subtitle-message",children:"Something went wrong"})]})}):(0,jsx_runtime.jsxs)("div",{className:"page lists-show",children:[(0,jsx_runtime.jsx)("nav",{children:(0,jsx_runtime.jsx)("h1",{className:"title-page",children:"Taskbox"})}),(0,jsx_runtime.jsx)(TaskListRedux.A,{})]})}InboxScreen.__docgenInfo={description:"",methods:[],displayName:"InboxScreen"};var HttpHandler=__webpack_require__("./node_modules/msw/lib/core/handlers/HttpHandler.mjs");function createHttpHandler(method){return(path,resolver,options={})=>new HttpHandler.h(method,path,resolver,options)}const http={all:createHttpHandler(/.+/),head:createHttpHandler(HttpHandler.P.HEAD),get:createHttpHandler(HttpHandler.P.GET),post:createHttpHandler(HttpHandler.P.POST),put:createHttpHandler(HttpHandler.P.PUT),delete:createHttpHandler(HttpHandler.P.DELETE),patch:createHttpHandler(HttpHandler.P.PATCH),options:createHttpHandler(HttpHandler.P.OPTIONS)};var decorators=__webpack_require__("./node_modules/msw/lib/core/utils/HttpResponse/decorators.mjs");class HttpResponse extends Response{constructor(body,init){const responseInit=(0,decorators.Tl)(init);super(body,responseInit),(0,decorators.fX)(this,responseInit)}static text(body,init){const responseInit=(0,decorators.Tl)(init);return responseInit.headers.has("Content-Type")||responseInit.headers.set("Content-Type","text/plain"),responseInit.headers.has("Content-Length")||responseInit.headers.set("Content-Length",body?new Blob([body]).size.toString():"0"),new HttpResponse(body,responseInit)}static json(body,init){const responseInit=(0,decorators.Tl)(init);responseInit.headers.has("Content-Type")||responseInit.headers.set("Content-Type","application/json");const responseText=JSON.stringify(body);return responseInit.headers.has("Content-Length")||responseInit.headers.set("Content-Length",responseText?new Blob([responseText]).size.toString():"0"),new HttpResponse(responseText,responseInit)}static xml(body,init){const responseInit=(0,decorators.Tl)(init);return responseInit.headers.has("Content-Type")||responseInit.headers.set("Content-Type","text/xml"),new HttpResponse(body,responseInit)}static html(body,init){const responseInit=(0,decorators.Tl)(init);return responseInit.headers.has("Content-Type")||responseInit.headers.set("Content-Type","text/html"),new HttpResponse(body,responseInit)}static arrayBuffer(body,init){const responseInit=(0,decorators.Tl)(init);return body&&!responseInit.headers.has("Content-Length")&&responseInit.headers.set("Content-Length",body.byteLength.toString()),new HttpResponse(body,responseInit)}static formData(body,init){return new HttpResponse(body,(0,decorators.Tl)(init))}}var TaskListRedux_stories=__webpack_require__("./stories/TaskListRedux.stories.tsx"),dist=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs");const InboxScreen_stories={component:InboxScreen,title:"InboxScreen",decorators:[story=>(0,jsx_runtime.jsx)(react_redux.Kq,{store:storeAPI,children:story()})],tags:["autodocs"]},Default={parameters:{msw:{handlers:[http.get("https://jsonplaceholder.typicode.com/todos?userId=1",(()=>HttpResponse.json(TaskListRedux_stories.MockedState.tasks)))]}},play:async({canvasElement})=>{const canvas=(0,dist.ux)(canvasElement);await(0,dist.n8)(await canvas.findByTestId("loading")),await(0,dist.fm)((async()=>{await dist.rC.click(canvas.getByLabelText("pinTask-1")),await dist.rC.click(canvas.getByLabelText("pinTask-3"))}))}},Error={parameters:{msw:{handlers:[http.get("https://jsonplaceholder.typicode.com/todos?userId=1",(()=>new HttpResponse(null,{status:403})))]}}},__namedExportsOrder=["Default","Error"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    msw: {\n      handlers: [http.get('https://jsonplaceholder.typicode.com/todos?userId=1', () => {\n        return HttpResponse.json(MockedState.tasks);\n      })]\n    }\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    // Waits for the component to transition from the loading state\n    await waitForElementToBeRemoved(await canvas.findByTestId('loading'));\n    // Waits for the component to be updated based on the store\n    await waitFor(async () => {\n      // Simulates pinning the first task\n      await fireEvent.click(canvas.getByLabelText('pinTask-1'));\n      // Simulates pinning the third task\n      await fireEvent.click(canvas.getByLabelText('pinTask-3'));\n    });\n  }\n}",...Default.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    msw: {\n      handlers: [http.get('https://jsonplaceholder.typicode.com/todos?userId=1', () => {\n        return new HttpResponse(null, {\n          status: 403\n        });\n      })]\n    }\n  }\n}",...Error.parameters?.docs?.source}}}},"./stories/Task.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ActionsData:()=>ActionsData,Archived:()=>Archived,Default:()=>Default,LongTitle:()=>LongTitle,Pinned:()=>Pinned,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_test__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),_Task__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./stories/Task.tsx");const ActionsData={onArchiveTask:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)(),onPinTask:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)()},__WEBPACK_DEFAULT_EXPORT__={component:_Task__WEBPACK_IMPORTED_MODULE_1__.A,title:"Task",tags:["autodocs"],excludeStories:/.*Data$/,args:{...ActionsData}},Default={args:{task:{id:"1",title:"Test Task",state:"TASK_INBOX"}}},Pinned={args:{task:{...Default.args.task,state:"TASK_PINNED"}}},Archived={args:{task:{...Default.args.task,state:"TASK_ARCHIVED"}}},LongTitle={args:{task:{...Default.args.task,title:"This task's name is absurdly large. In fact, I think if I keep going I might end up with content overflow. What will happen? The star that represents a pinned task could have text overlapping. The text could cut-off abruptly when it reaches the star. I hope not!"}}},__namedExportsOrder=["ActionsData","Default","Pinned","Archived","LongTitle"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    task: {\n      id: '1',\n      title: 'Test Task',\n      state: 'TASK_INBOX'\n    }\n  }\n}",...Default.parameters?.docs?.source}}},Pinned.parameters={...Pinned.parameters,docs:{...Pinned.parameters?.docs,source:{originalSource:"{\n  args: {\n    task: {\n      ...Default.args.task,\n      state: 'TASK_PINNED'\n    }\n  }\n}",...Pinned.parameters?.docs?.source}}},Archived.parameters={...Archived.parameters,docs:{...Archived.parameters?.docs,source:{originalSource:"{\n  args: {\n    task: {\n      ...Default.args.task,\n      state: 'TASK_ARCHIVED'\n    }\n  }\n}",...Archived.parameters?.docs?.source}}},LongTitle.parameters={...LongTitle.parameters,docs:{...LongTitle.parameters?.docs,source:{originalSource:"{\n  args: {\n    task: {\n      ...Default.args.task,\n      title: longTitleString\n    }\n  }\n}",...LongTitle.parameters?.docs?.source}}}},"./stories/TaskListRedux.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Empty:()=>Empty,Loading:()=>Loading,MockedState:()=>MockedState,WithPinnedTasks:()=>WithPinnedTasks,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),_TaskListRedux__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./stories/TaskListRedux.tsx"),_Task_stories__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./stories/Task.stories.tsx"),react_redux__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react-redux/dist/react-redux.mjs"),_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs");const MockedState={tasks:[{..._Task_stories__WEBPACK_IMPORTED_MODULE_2__.Default.args.task,id:"1",title:"Task List Redux 1"},{..._Task_stories__WEBPACK_IMPORTED_MODULE_2__.Default.args.task,id:"2",title:"Task List Redux 2"},{..._Task_stories__WEBPACK_IMPORTED_MODULE_2__.Default.args.task,id:"3",title:"Task List Redux 3"},{..._Task_stories__WEBPACK_IMPORTED_MODULE_2__.Default.args.task,id:"4",title:"Task List Redux 4"},{..._Task_stories__WEBPACK_IMPORTED_MODULE_2__.Default.args.task,id:"5",title:"Task List Redux 5"},{..._Task_stories__WEBPACK_IMPORTED_MODULE_2__.Default.args.task,id:"6",title:"Task List Redux 6"}],status:"idle",error:null},Mockstore=({taskboxState,children})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_redux__WEBPACK_IMPORTED_MODULE_3__.Kq,{store:(0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_4__.U1)({reducer:{taskbox:(0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_4__.Z0)({name:"taskbox",initialState:taskboxState,reducers:{updateTaskState:(state,action)=>{const{id,newTaskState}=action.payload,task=state.tasks.findIndex((task=>task.id===id));task>=0&&(state.tasks[task].state=newTaskState)}}}).reducer}}),children}),__WEBPACK_DEFAULT_EXPORT__={component:_TaskListRedux__WEBPACK_IMPORTED_MODULE_1__.A,title:"TaskListRedux",decorators:[story=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{margin:"3rem"},children:story()})],tags:["autodocs"],excludeStories:/.*MockedState$/},Default={decorators:[story=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Mockstore,{taskboxState:MockedState,children:story()})]},WithPinnedTasks={decorators:[story=>{const pinnedtasks=[...MockedState.tasks.slice(0,5),{id:"6",title:"Task List Redux 6 (pinned)",state:"TASK_PINNED"}];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Mockstore,{taskboxState:{...MockedState,tasks:pinnedtasks},children:story()})}]},Loading={decorators:[story=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Mockstore,{taskboxState:{...MockedState,status:"loading"},children:story()})]},Empty={decorators:[story=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Mockstore,{taskboxState:{...MockedState,tasks:[]},children:story()})]},__namedExportsOrder=["MockedState","Default","WithPinnedTasks","Loading","Empty"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  decorators: [story => <Mockstore taskboxState={MockedState}>{story()}</Mockstore>]\n}",...Default.parameters?.docs?.source}}},WithPinnedTasks.parameters={...WithPinnedTasks.parameters,docs:{...WithPinnedTasks.parameters?.docs,source:{originalSource:"{\n  decorators: [story => {\n    const pinnedtasks = [...MockedState.tasks.slice(0, 5), {\n      id: '6',\n      title: 'Task List Redux 6 (pinned)',\n      state: 'TASK_PINNED'\n    }];\n    return <Mockstore taskboxState={{\n      ...MockedState,\n      tasks: pinnedtasks\n    }}>\r\n                    {story()}\r\n                </Mockstore>;\n  }]\n}",...WithPinnedTasks.parameters?.docs?.source}}},Loading.parameters={...Loading.parameters,docs:{...Loading.parameters?.docs,source:{originalSource:"{\n  decorators: [story => <Mockstore taskboxState={{\n    ...MockedState,\n    status: 'loading'\n  }}>\r\n                {story()}\r\n            </Mockstore>]\n}",...Loading.parameters?.docs?.source}}},Empty.parameters={...Empty.parameters,docs:{...Empty.parameters?.docs,source:{originalSource:"{\n  decorators: [story => <Mockstore taskboxState={{\n    ...MockedState,\n    tasks: []\n  }}>\r\n                {story()}\r\n            </Mockstore>]\n}",...Empty.parameters?.docs?.source}}}},"./stories/Task.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>Task});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js");function Task({task:{id,title,state},onArchiveTask,onPinTask}){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:`list-item ${state}`,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("label",{htmlFor:`archiveTask-${id}`,"aria-label":`archiveTask-${id}`,className:"checkbox",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input",{type:"checkbox",disabled:!0,name:"checked",id:`archiveTask-${id}`,checked:"TASK_ARCHIVED"===state}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"checkbox-custom",onClick:()=>onArchiveTask(id)})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("label",{htmlFor:`title-${id}`,"aria-label":title,className:"title",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input",{type:"text",value:title,readOnly:!0,name:"title",id:`title-${id}`,placeholder:"Input title",style:{textOverflow:"ellipsis"}})}),"TASK_ARCHIVED"!==state&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("button",{className:"pin-button",onClick:()=>onPinTask(id),id:`pinTask-${id}`,"aria-label":`pinTask-${id}`,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"icon-star"})},`pinTask-${id}`)]})}Task.__docgenInfo={description:"",methods:[],displayName:"Task",props:{task:{required:!0,tsType:{name:"signature",type:"object",raw:"{\r\n    id: string;\r\n    title: string;\r\n    state: string;\r\n}",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"title",value:{name:"string",required:!0}},{key:"state",value:{name:"string",required:!0}}]}},description:""},onArchiveTask:{required:!0,tsType:{name:"signature",type:"function",raw:"(id: string) => void",signature:{arguments:[{type:{name:"string"},name:"id"}],return:{name:"void"}}},description:""},onPinTask:{required:!0,tsType:{name:"signature",type:"function",raw:"(id: string) => void",signature:{arguments:[{type:{name:"string"},name:"id"}],return:{name:"void"}}},description:""}}}},"./stories/TaskListRedux.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>TaskList});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react_redux=__webpack_require__("./node_modules/react-redux/dist/react-redux.mjs"),Task=__webpack_require__("./stories/Task.tsx"),redux_toolkit_modern=__webpack_require__("./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs");const TaskBoxData={tasks:[{id:"1",title:"Something",state:"TASK_INBOX"},{id:"2",title:"Something more",state:"TASK_INBOX"},{id:"3",title:"Something else",state:"TASK_INBOX"},{id:"4",title:"Something again",state:"TASK_INBOX"}],status:"idle",error:null},TasksSlice=(0,redux_toolkit_modern.Z0)({name:"taskbox",initialState:TaskBoxData,reducers:{updateTaskState:(state,action)=>{const{id,newTaskState}=action.payload,task=state.tasks.findIndex((task=>task.id===id));task>=0&&(state.tasks[task].state=newTaskState)}}}),{updateTaskState}=TasksSlice.actions;(0,redux_toolkit_modern.U1)({reducer:{taskbox:TasksSlice.reducer}});function TaskList(){const tasks=(0,react_redux.d4)((state=>[...state.taskbox.tasks.filter((t=>"TASK_PINNED"===t.state)),...state.taskbox.tasks.filter((t=>"TASK_PINNED"!==t.state))].filter((t=>"TASK_INBOX"===t.state||"TASK_PINNED"===t.state)))),{status}=(0,react_redux.d4)((state=>state.taskbox)),dispatch=(0,react_redux.wA)(),LoadingRow=(0,jsx_runtime.jsxs)("div",{className:"loading-item",children:[(0,jsx_runtime.jsx)("span",{className:"glow-checkbox"}),(0,jsx_runtime.jsxs)("span",{className:"glow-text",children:[(0,jsx_runtime.jsx)("span",{children:"Loading"})," ",(0,jsx_runtime.jsx)("span",{children:"cool"})," ",(0,jsx_runtime.jsx)("span",{children:"state"})]})]});return"loading"===status?(0,jsx_runtime.jsxs)("div",{className:"list-items","data-testid":"loading",children:[LoadingRow,LoadingRow,LoadingRow,LoadingRow,LoadingRow,LoadingRow]},"loading"):0===tasks.length?(0,jsx_runtime.jsx)("div",{className:"list-items","data-testid":"empty",children:(0,jsx_runtime.jsxs)("div",{className:"wrapper-message",children:[(0,jsx_runtime.jsx)("span",{className:"icon-check"}),(0,jsx_runtime.jsx)("p",{className:"title-message",children:"You have no tasks"}),(0,jsx_runtime.jsx)("p",{className:"subtitle-message",children:"Sit back and relax"})]})},"empty"):(0,jsx_runtime.jsx)("div",{className:"list-items","data-testid":"success",children:tasks.map((task=>(0,jsx_runtime.jsx)(Task.A,{task,onPinTask:task=>{dispatch(updateTaskState({id:task,newTaskState:"TASK_PINNED"}))},onArchiveTask:task=>{dispatch(updateTaskState({id:task,newTaskState:"TASK_ARCHIVED"}))}},task.id)))},"success")}TaskList.__docgenInfo={description:"",methods:[],displayName:"TaskList"}}}]);